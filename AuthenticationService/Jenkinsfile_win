pipeline {
    agent any
    
    environment {
        NODE_VERSION = '22'
        DOCKER_HUB_REPO = 'muhammedadel/authentication-service'
        DOCKERHUB_CREDENTIALS = credentials('Docker')
    }
    
    stages {
        stage('Stop and Remove Containers') {
            steps {
                script {
                    bat "docker stop authentication-service || exit 0"
                    bat "docker rm authentication-service || exit 0"
                    bat "docker rmi ${DOCKER_HUB_REPO} || exit 0"
                }
            }
        }

        stage('TypeScript Compilation') {
            steps {
                script {
                    dir('AuthenticationService') {
                        bat "npm install"
                        bat "npm run build"
                    }
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    dir('AuthenticationService') {
                        bat "docker build -t ${DOCKER_HUB_REPO} -f Dockerfile ."
                    }
                }
            }
        }
        
        stage('Docker Login') {
            steps {
                bat "docker login -u %DOCKERHUB_CREDENTIALS_USR% --password %DOCKERHUB_CREDENTIALS_PSW%"
            }
        }

        stage('Push Docker Image to Dockerhub') {
            steps {
                script {
                    bat "docker push ${DOCKER_HUB_REPO}"
                }
            }
        }
        
        stage('Run Container') {
            steps {
                script {
                    bat "docker run -d --name authentication-service -p 3000:3000 \
                        -e APPLICATION_PORT=3000 \
                        -e APPLICATION_NAME=\"hello-world\" \
                        -e DEFAULT_LANGUAGE='en' \
                        -e MONGODB_URL=your_mongodb_url \
                        -e MONGODB_PORT=27017 \
                        -e MONGODB_DATABASE=your_mongodb_database \
                        -e MYSQL_URL=your_mysql_url \
                        -e MYSQL_PORT=3306 \
                        -e MYSQL_DATABASE=your_mysql_database \
                        -e MYSQL_USER=your_mysql_user \
                        -e MYSQL_PASSWORD=your_mysql_password \
                        -e REDIS_HOST=your_redis_host \
                        -e REDIS_PORT=6379 \
                        -e REDIS_PASSWORD=your_redis_password \
                        -e ELASTICSEARCH_NODE=http://localhost:9200 \
                        -e ELASTICSEARCH_USER=your_elasticsearch_user \
                        -e ELASTICSEARCH_PASSWORD=your_elasticsearch_password \
                        -e KAFKA_BROKERS=localhost:9092 \
                        -e KAFKA_CLIENT_ID=your_kafka_client_id \
                        -e KAFKA_GROUP_ID=your_kafka_group_id \
                        -e RABBITMQ_URL=amqp://localhost:5672 \
                        -e RABBITMQ_EXCHANGE=your_rabbitmq_exchange \
                        -e RABBITMQ_QUEUE=your_rabbitmq_queue \
                        -e MQTT_URL=mqtt://localhost:1883 \
                        -e MQTT_CLIENT_ID=your_mqtt_client_id \
                        ${DOCKER_HUB_REPO}"
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline succeeded! Deploy your application.'
        }
        failure {
            echo 'Pipeline failed! Take appropriate action.'
        }
    }
}
